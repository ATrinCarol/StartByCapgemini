{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../multiplica-por.pipe\";\nexport class PipeCustomizadoComponent {}\nPipeCustomizadoComponent.ɵfac = function PipeCustomizadoComponent_Factory(t) {\n  return new (t || PipeCustomizadoComponent)();\n};\nPipeCustomizadoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PipeCustomizadoComponent,\n  selectors: [[\"app-pipe-customizado\"]],\n  decls: 23,\n  vars: 20,\n  template: function PipeCustomizadoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Pipe customizado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h6\");\n      i0.ɵɵtext(3, \"Nesse exemplo, customizamos um pipe com a fun\\u00E7\\u00E3o de multiplicar dois valores.\");\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵtext(5, \" Lembre-se que para utilizar o pipe \\u00E9 necess\\u00E1rio que o valor esteja dentro das 4\");\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵtext(7, \" chaves referentes da interpola\\u00E7\\u00E3o.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9);\n      i0.ɵɵpipe(10, \"multiplicaPor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\");\n      i0.ɵɵtext(12);\n      i0.ɵɵpipe(13, \"multiplicaPor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\");\n      i0.ɵɵtext(15);\n      i0.ɵɵpipe(16, \"multiplicaPor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p\");\n      i0.ɵɵtext(18);\n      i0.ɵɵpipe(19, \"multiplicaPor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"p\");\n      i0.ɵɵtext(21);\n      i0.ɵɵpipe(22, \"multiplicaPor\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate1(\"2x2 = \", i0.ɵɵpipeBind2(10, 5, 2, 2), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"3x2 = \", i0.ɵɵpipeBind2(13, 8, 3, 2), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"5x2 = \", i0.ɵɵpipeBind2(16, 11, 5, 2), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"5x5 = \", i0.ɵɵpipeBind2(19, 14, 5, 5), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"3x7 = \", i0.ɵɵpipeBind2(22, 17, 3, 7), \"\");\n    }\n  },\n  dependencies: [i1.MultiplicaPorPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,wBAAwB;AAAxBA,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPrCC,0BAAI;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzBA,0BAAI;MAAAA,uGACa;MAAAA,qBAAI;MAACA,0GACS;MAAAA,qBAAI;MAACA,6DAAkC;MAAAA,iBAAK;MAE3EA,yBAAG;MAAAA,YAAgC;;MAAAA,iBAAI;MACvCA,0BAAG;MAAAA,aAAgC;;MAAAA,iBAAI;MACvCA,0BAAG;MAAAA,aAAgC;;MAAAA,iBAAI;MACvCA,0BAAG;MAAAA,aAAgC;;MAAAA,iBAAI;MACvCA,0BAAG;MAAAA,aAAgC;;MAAAA,iBAAI;;;MAJpCA,eAAgC;MAAhCA,gEAAgC;MAChCA,eAAgC;MAAhCA,gEAAgC;MAChCA,eAAgC;MAAhCA,iEAAgC;MAChCA,eAAgC;MAAhCA,iEAAgC;MAChCA,eAAgC;MAAhCA,iEAAgC","names":["PipeCustomizadoComponent","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\karin\\Desktop\\CAROL\\Capgemini\\StartPratica\\Angular\\fundamentos-angular\\src\\app\\pipe-customizado\\pipe-customizado.component.ts","C:\\Users\\karin\\Desktop\\CAROL\\Capgemini\\StartPratica\\Angular\\fundamentos-angular\\src\\app\\pipe-customizado\\pipe-customizado.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pipe-customizado',\n  templateUrl: './pipe-customizado.component.html',\n  styleUrls: ['./pipe-customizado.component.css']\n})\nexport class PipeCustomizadoComponent {\n\n}\n","<h2>Pipe customizado</h2>\n\n<h6>Nesse exemplo, customizamos um pipe com a função de multiplicar \n    dois valores.<br> Lembre-se que para utilizar o pipe é necessário que\n    o valor esteja dentro das 4<br> chaves referentes da interpolação.</h6>\n\n<p>2x2 = {{ 2 | multiplicaPor: 2 }}</p>\n<p>3x2 = {{ 3 | multiplicaPor: 2 }}</p>\n<p>5x2 = {{ 5 | multiplicaPor: 2 }}</p>\n<p>5x5 = {{ 5 | multiplicaPor: 5 }}</p>\n<p>3x7 = {{ 3 | multiplicaPor: 7 }}</p>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}